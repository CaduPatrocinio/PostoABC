unit uControleTanque;

interface

uses
  uTanqueModel, System.SysUtils, FireDAC.Comp.Client;

type
  TTanqueControl = class
  private
    FTanqueModel: TTanqueModel;

  public
    constructor Create;
    destructor Destroy; override;

    function Salvar: Boolean;
    function Obter: TFDQuery;
    function ObterTanque: TFDQuery;
    function GetId(AAutoIncrementar: Integer): Integer;

    property TanqueModel: TTanqueModel read FTanqueModel write FTanqueModel;
  end;

implementation

{ TClienteControl }

constructor TBombaControl.Create;
begin
  FTanqueModel := TBombaModel.Create;
end;

destructor TBombaControl.Destroy;
begin
  FTanqueModel.Free;
end;

function TBombaControl.GetId(AAutoIncrementar: Integer): Integer;
begin
  Result := FTanqueModel.GetId(AAutoIncrementar);
end;

function TBombaControl.Obter: TFDQuery;
begin
  Result := FTanqueModel.Obter;
end;

function TBombaControl.ObterTanque: TFDQuery;
begin
  Result := FTanqueModel.Obter;
end;

function TBombaControl.Salvar: Boolean;
begin
  Result := FTanqueModel.Salvar;
end;

end.

