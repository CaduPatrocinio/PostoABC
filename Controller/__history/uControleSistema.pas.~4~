unit uControleSistema;

interface

uses
  uConexao, System.SysUtils;//, uEmpresaModel;

type
  TControleSistemal = class
  private
    FConexao     : TConexao;
  //  FEmpresaModel: TEmpresaModel;

    class var FInstance: TControleSistemal;

  public
    constructor Create();
    destructor Destroy; override;

    procedure CarregarEmpresa(ACodigoEmpresa: Integer);

    class function GetInstance: TControleSistemal;

     property Conexao: TConexao read FConexao write FConexao;
   //  property EmpresaModel: TEmpresaModel read FEmpresaModel write FEmpresaModel;
  end;

implementation

{ TSistemaControl }

procedure TControleSistemal.CarregarEmpresa(ACodigoEmpresa: Integer);
begin
  //EmpresaModel.Carregar(ACodigoEmpresa);
end;

constructor TControleSistemal.Create();
begin
  FConexao     := TConexao.Create;
  //EmpresaModel := TEmpresaModel.Create();
end;

destructor TControleSistemal.Destroy;
begin
 // FEmpresaModel.Free;
  FConexao.Free;
end;

class function TControleSistemal.GetInstance: TControleSistemal;
begin
  if not Assigned(Self.FInstance) then
  begin
    Self.FInstance := TControleSistemal.Create();
  end;

  Result := Self.FInstance;
end;

end.
